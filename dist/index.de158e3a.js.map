{"mappings":"AAAA,IAAI,WAAW,GAAG,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,IAAI;AAC7D,IAAI,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI;IACxC;QAAE,IAAI,EAAE,GAAG;QAAE,GAAG,EAAE,sBAAsB;QAAE,MAAM,EAAE,UAAU;KAAE;IAC9D;QAAE,IAAI,EAAE,GAAG;QAAE,GAAG,EAAE,0BAA0B;QAAE,MAAM,EAAE,cAAc;KAAE;CACzE;AACD,IAAI,OAAO,GAAG,CAAC,CAAC,mBAAmB,CAAC;AAGpC,MAAM,OAAO,gDAAgD,AAAC;AAC9D,IAAI,cAAc,GAAG,CAAC,GAAG,GAAK;IAC1B,OAAO,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAA;CAC/B;AAED,IAAI,eAAe,GAAG,IAAI,GAAG,EAAE;AAE3B,OAAO;AACP,CAAC,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,QAAQ,EAAE,CAAC,CAAC,GAAK;IACxC,CAAC,CAAC,cAAc,EAAE;IAClB,IAAI,QAAQ,GAAG,CAAC,CAAC,aAAa;IAC9B,IAAI,KAAK,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC;IACrC,UAAU,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;IAC3B,MAAM,EAAE;CACX,CAAC;AAEN,IAAI,MAAM,GAAG,IAAM;IACf,CAAC,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,MAAM,EAAE;IAC7C,UAAU,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,KAAK,GAAK;QAChC,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC;gDAC2B,EAAE,IAAI,CAAC,GAAG,CAAC;;;gCAG3B,EAAE,IAAI,CAAC,IAAI,CAAC;;kDAEM,EAAE,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;;;;;;;;yBAQpD,CAAC,CAAC;QACnB,IAAI,MAAM,GAAG,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,AAAC;KAC9E,CAAC;CACL;AACD,MAAM,EAAE;AAER,CAAC,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC,GAAK;IAC/B,IAAI,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,AAAC;IAC5C,IAAI,QAAQ,KAAK,IAAI,EACjB,OAAM;IAGV,IAAI,OAAO,GAAG,EAAE;IAChB,IAAI,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,EAC9B,OAAO,GAAG,QAAQ;SAElB,OAAO,GAAG,UAAU,GAAG,QAAQ;IAInC,IAAI,MAAM,GAAG,cAAc,CAAC,OAAO,CAAC;IACpC,IAAI,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC;IACpB,UAAU,CAAC,IAAI,CAAC;QACZ,IAAI,EAAE,IAAI,CAAC,WAAW,EAAE;QACxB,GAAG,EAAE,OAAO;QACZ,MAAM,EAAE,MAAM;KACjB,CAAC;IACF,MAAM,EAAE;CACX,CAAC;AAEF,MAAM,CAAC,cAAc,GAAG,IAAM;IAC1B,IAAI,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC;IACzC,YAAY,CAAC,OAAO,CAAC,aAAa,EAAE,QAAQ,CAAC;CAChD","sources":["src/main.js"],"sourcesContent":["let dataWebsite = localStorage.getItem(\"dataWebsite\") || null\nlet arrHashMap = JSON.parse(dataWebsite) || [\n    { logo: \"A\", url: \"https://www.acfun.cn\", domain: \"acfun.cn\" },\n    { logo: \"B\", url: \"https://www.bilibili.com\", domain: \"bilibili.com\" }\n]\nlet $lastLi = $('.siteList li:last')\n\n\nconst REG_URL = /(?:https|http):\\/\\/(?:www\\.)*([\\w+|\\.|\\-]+)/;\nlet simplifyDomain = (url) => {\n    return url.match(REG_URL)[1]\n}\n\nlet map_close2Index = new Map()\n{\n    // 事件委托\n    $('.siteList').on('click', '.close', (e) => {\n        e.preventDefault()\n        let divClose = e.currentTarget\n        let index = $(divClose).data('index')\n        arrHashMap.splice(index, 1)\n        render()\n    })\n}\nlet render = () => {\n    $(\".siteList\").find(\"li:not(:last)\").remove()\n    arrHashMap.forEach((node, index) => {\n        let $li = $(`<li>\n                        <a class=\"anchor\" href=\"${node.url}\">\n                            <div class=\"site\">\n                                <div class=\"logo\">\n                                ${node.logo}\n                                </div>\n                                <div class=\"link\">${simplifyDomain(node.url)}</div>\n                                <div class=\"close\">\n                                    <svg class=\"icon\">\n                                        <use xlink:href=\"#icon-close\"></use>\n                                    </svg>\n                                </div>\n                            </div>\n                        </a>\n                    </li>`)\n        let $close = $li.insertBefore($lastLi).find('.close').data('index', index);\n    })\n}\nrender()\n\n$('.addButton').on('click', (e) => {\n    let urlInput = window.prompt('请输入添加的站点网址：');\n    if (urlInput === null) {\n        return\n    }\n\n    let urlReal = \"\"\n    if (urlInput.indexOf('http') === 0) {\n        urlReal = urlInput\n    } else {\n        urlReal = \"https://\" + urlInput\n    }\n\n\n    let domain = simplifyDomain(urlReal)\n    let logo = domain[0]\n    arrHashMap.push({\n        logo: logo.toUpperCase(),\n        url: urlReal,\n        domain: domain\n    })\n    render()\n})\n\nwindow.onbeforeunload = () => {\n    let str_data = JSON.stringify(arrHashMap)\n    localStorage.setItem(\"dataWebsite\", str_data)\n}"],"names":[],"version":3,"file":"index.de158e3a.js.map","sourceRoot":"/__parcel_source_root/"}